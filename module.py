import base64
exec(base64.b64decode('aW1wb3J0IGpzb24KaW1wb3J0IG9zCmltcG9ydCByYW5kb20KaW1wb3J0IHJlcXVlc3RzCmltcG9ydCBkYXRldGltZQpmcm9tIGRhdGV0aW1lIGltcG9ydCBkYXRldGltZQpmcm9tIGJzNCBpbXBvcnQgQmVhdXRpZnVsU291cAoKQmw9J1wwMzNbMzBtJwpSZT0nXDAzM1sxOzMxbScKR3I9J1wwMzNbMTszMm0nClllPSdcMDMzWzE7MzNtJwpCbHU9J1wwMzNbMTszNG0nCk1hZ2U9J1wwMzNbMTszNW0nCkN5PSdcMDMzWzE7MzZtJwpXaD0nXDAzM1sxOzM3bScKCnVzZXJfYWdlbnRzID0gWwogICAgJ01vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS82MC4wLjMxMTIuMTEzIFNhZmFyaS81MzcuMzYnLAogICAgJ01vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzYwLjAuMzExMi45MCBTYWZhcmkvNTM3LjM2JywKICAgICdNb3ppbGxhLzUuMCAoV2luZG93cyBOVCA1LjE7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS82MC4wLjMxMTIuOTAgU2FmYXJpLzUzNy4zNicsCiAgICAnTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4yOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNjAuMC4zMTEyLjkwIFNhZmFyaS81MzcuMzYnLAogICAgJ01vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzQ0LjAuMjQwMy4xNTcgU2FmYXJpLzUzNy4zNicsCiAgICAnTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4zOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNjAuMC4zMTEyLjExMyBTYWZhcmkvNTM3LjM2JywKICAgICdNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTcuMC4yOTg3LjEzMyBTYWZhcmkvNTM3LjM2JywKICAgICdNb3ppbGxhLzUuMCAoV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS81Ny4wLjI5ODcuMTMzIFNhZmFyaS81MzcuMzYnLAogICAgJ01vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdpbjY0OyB4NjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS81NS4wLjI4ODMuODcgU2FmYXJpLzUzNy4zNicsCiAgICAnTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNTUuMC4yODgzLjg3IFNhZmFyaS81MzcuMzYnLAogICAgJ01vemlsbGEvNC4wIChjb21wYXRpYmxlOyBNU0lFIDkuMDsgV2luZG93cyBOVCA2LjEpJywKICAgICdNb3ppbGxhLzUuMCAoV2luZG93cyBOVCA2LjE7IFdPVzY0OyBUcmlkZW50LzcuMDsgcnY6MTEuMCkgbGlrZSBHZWNrbycsCiAgICAnTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgV09XNjQ7IFRyaWRlbnQvNS4wKScsCiAgICAnTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBUcmlkZW50LzcuMDsgcnY6MTEuMCkgbGlrZSBHZWNrbycsCiAgICAnTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4yOyBXT1c2NDsgVHJpZGVudC83LjA7IHJ2OjExLjApIGxpa2UgR2Vja28nLAogICAgJ01vemlsbGEvNS4wIChXaW5kb3dzIE5UIDEwLjA7IFdPVzY0OyBUcmlkZW50LzcuMDsgcnY6MTEuMCkgbGlrZSBHZWNrbycsCiAgICAnTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMDsgVHJpZGVudC81LjApJywKICAgICdNb3ppbGxhLzUuMCAoV2luZG93cyBOVCA2LjM7IFdPVzY0OyBUcmlkZW50LzcuMDsgcnY6MTEuMCkgbGlrZSBHZWNrbycsCiAgICAnTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgOS4wOyBXaW5kb3dzIE5UIDYuMTsgVHJpZGVudC81LjApJywKICAgICdNb3ppbGxhLzUuMCAoV2luZG93cyBOVCA2LjE7IFdpbjY0OyB4NjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tvJywKICAgICdNb3ppbGxhLzUuMCAoY29tcGF0aWJsZTsgTVNJRSAxMC4wOyBXaW5kb3dzIE5UIDYuMTsgV09XNjQ7IFRyaWRlbnQvNi4wKScsCiAgICAnTW96aWxsYS81LjAgKGNvbXBhdGlibGU7IE1TSUUgMTAuMDsgV2luZG93cyBOVCA2LjE7IFRyaWRlbnQvNi4wKScsCiAgICAnTW96aWxsYS80LjAgKGNvbXBhdGlibGU7IE1TSUUgOC4wOyBXaW5kb3dzIE5UIDUuMTsgVHJpZGVudC80LjA7IC5ORVQgQ0xSIDIuMC41MDcyNzsgLk5FVCBDTFIgMy4wLjQ1MDYuMjE1MjsgLk5FVCBDTFIgMy41LjMwNzI5KScKXQoKY2xhc3MgU2NyYXBwZXI6CglkZWYgX19pbml0X18oc2VsZiwgdXNlcm5hbWUpOgoJCWlmIHVzZXJuYW1lLnN0YXJ0c3dpdGgoJ0AnKToKCQkJc2VsZi51c2VybmFtZSA9IHVzZXJuYW1lCgkJZWxzZToKCQkJc2VsZi51c2VybmFtZSA9IGYnQHt1c2VybmFtZX0nCgkJCgkJc2VsZi5jcmVhdGVfZGlyKCkKCQkjIFNjcmFwZXMgdGhlIHByb2ZpbGUgYW5kIGNyZWF0ZXMgdGhlIGRhdGEgYW5kIHBvc3RzIG9iamVjdHMKCQlzZWxmLmRhdGEgPSBzZWxmLnNjcmFwZV9wcm9maWxlKCkKCQlzZWxmLnByaW50X2RhdGEoKQoJCSMgU2F2ZSB0aGUgZGF0YSBpbnRvIHRoZSB0ZXh0IGZpbGUgaW4gdGhlIGRpcgoJCXNlbGYuc2F2ZV9kYXRhKCkKCgoJZGVmIHNjcmFwZV9wcm9maWxlKHNlbGYpOgoJCSIiIgoJCVNjcmFwZXMgdGhlIHVzZXIgcHJvZmlsZSBhbmQgY3JlYXRlcyB0aGUgZGF0YSBvYmplY3QKCQl3aGljaCBjb250YWlucyB0aGUgdXNlciBpbmZvcm1hdGlvbgoJCTpwYXJhbXM6IG5vbmUKCQk6cmV0dXJuOm5vbmUKCQkiIiIKCQlyID0gcmVxdWVzdHMuZ2V0KAoJCQlmJ2h0dHA6Ly90aWt0b2suY29tL3tzZWxmLnVzZXJuYW1lfScsCgkJCWhlYWRlcnM9eydVc2VyLUFnZW50JzogcmFuZG9tLmNob2ljZSh1c2VyX2FnZW50cyl9CgkJKQoKCQlzb3VwID0gQmVhdXRpZnVsU291cChyLnRleHQsICJodG1sLnBhcnNlciIpCgkJZGF0YSA9IHNvdXAuZmluZF9hbGwoInNjcmlwdCIsIGF0dHJzPXsidHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uIiwgImlkIjogIl9fVU5JVkVSU0FMX0RBVEFfRk9SX1JFSFlEUkFUSU9OX18ifSkKCQkiIiJkYXRhID0gW2pzb24ubG9hZHMoeC5zdHJpbmcpIGZvciB4IGluIHNvdXAuZmluZF9hbGwoInNjcmlwdCIsIHR5cGU9ImFwcGxpY2F0aW9uL2xkK2pzb24iKV0iIiIKCQljb250ZW50ID0ganNvbi5sb2FkcyhkYXRhWzBdLmNvbnRlbnRzWzBdKQoKCQlyZXR1cm4gewoJCQkiLSBOaWNrbmFtZSI6IGNvbnRlbnRbIl9fREVGQVVMVF9TQ09QRV9fIl1bIndlYmFwcC51c2VyLWRldGFpbCJdWyJ1c2VySW5mbyJdWyJ1c2VyIl1bIm5pY2tuYW1lIl0sCgkJCSItIFVzZXJuYW1lIjogY29udGVudFsiX19ERUZBVUxUX1NDT1BFX18iXVsid2ViYXBwLnVzZXItZGV0YWlsIl1bInVzZXJJbmZvIl1bInVzZXIiXVsidW5pcXVlSWQiXSwKCQkJIi0gVXNlciBpZCI6IGNvbnRlbnRbIl9fREVGQVVMVF9TQ09QRV9fIl1bIndlYmFwcC51c2VyLWRldGFpbCJdWyJ1c2VySW5mbyJdWyJ1c2VyIl1bImlkIl0sCgkJCSItIE5lZ2FyYSI6IGNvbnRlbnRbIl9fREVGQVVMVF9TQ09QRV9fIl1bIndlYmFwcC51c2VyLWRldGFpbCJdWyJ1c2VySW5mbyJdWyJ1c2VyIl1bInJlZ2lvbiJdLAoJCQkiLSBCYWhhc2EiOiBjb250ZW50WyJfX0RFRkFVTFRfU0NPUEVfXyJdWyJ3ZWJhcHAudXNlci1kZXRhaWwiXVsidXNlckluZm8iXVsidXNlciJdWyJsYW5ndWFnZSJdLAoJCQkiLSBCaW8iOiBjb250ZW50WyJfX0RFRkFVTFRfU0NPUEVfXyJdWyJ3ZWJhcHAudXNlci1kZXRhaWwiXVsidXNlckluZm8iXVsidXNlciJdWyJzaWduYXR1cmUiXSwKCQkJIi0gTWVuZ2lrdXRpIjogY29udGVudFsiX19ERUZBVUxUX1NDT1BFX18iXVsid2ViYXBwLnVzZXItZGV0YWlsIl1bInVzZXJJbmZvIl1bInN0YXRzIl1bImZvbGxvd2luZ0NvdW50Il0sCgkJCSItIFBlbmdpa3V0IjogY29udGVudFsiX19ERUZBVUxUX1NDT1BFX18iXVsid2ViYXBwLnVzZXItZGV0YWlsIl1bInVzZXJJbmZvIl1bInN0YXRzIl1bImZvbGxvd2VyQ291bnQiXSwKCQkJIi0gTGlrZSI6IGNvbnRlbnRbIl9fREVGQVVMVF9TQ09QRV9fIl1bIndlYmFwcC51c2VyLWRldGFpbCJdWyJ1c2VySW5mbyJdWyJzdGF0cyJdWyJoZWFydCJdLAoJCQkiLSBWaWRlbyI6IGNvbnRlbnRbIl9fREVGQVVMVF9TQ09QRV9fIl1bIndlYmFwcC51c2VyLWRldGFpbCJdWyJ1c2VySW5mbyJdWyJzdGF0cyJdWyJ2aWRlb0NvdW50Il0sCgkJCSItIExpbmsgZm90byBwcm9maWxlIjogY29udGVudFsiX19ERUZBVUxUX1NDT1BFX18iXVsid2ViYXBwLnVzZXItZGV0YWlsIl1bInVzZXJJbmZvIl1bInVzZXIiXVsiYXZhdGFyTGFyZ2VyIl0KCQl9CgoJZGVmIGRvd25sb2FkX3Byb2ZpbGVfcGljdHVyZShzZWxmKToKCQkiIiIKCQlEb3dubG9hZHMgdGhlIHByb2ZpbGUgcGljdHVyZQoJCTpwYXJhbXM6IG5vbmUKCQk6cmV0dXJuOiBub25lCgkJIiIiCgkJciA9IHJlcXVlc3RzLmdldChzZWxmLmRhdGFbJ1Byb2ZpbGUgaW1hZ2UgVVJMJ10pCgkJd2l0aCBvcGVuKGYie3NlbGYudXNlcm5hbWV9LmpwZyIsIndiIikgYXMgZjoKCQkJZi53cml0ZShyLmNvbnRlbnQpCgkJCXByaW50KGYie0N5fUhhc2lsIHVuZHVoYW4gZGkgc2ltcGFuIGtlIHtXaH17b3MuZ2V0Y3dkKCl9IikKCgoJZGVmIHNhdmVfZGF0YShzZWxmKToKCQkiIiIKCQlEdW1wcyB0aGUgZGljdCBpbnRvIGEganNvbiBmaWxlIGluIHRoZSB1c2VyIGRpcmVjdG9yeQoJCTpwYXJhbXM6IG5vbmUKCQk6cmV0dXJuOiBub25lCgkJIiIiCgoJCXByaW50KGYie0JsdX1EQVRBIEpTT04gQkFDS1VQIDpcbiIpCgoJCXdpdGggb3BlbihmJ3tzZWxmLnVzZXJuYW1lfS5qc29uJywndycpIGFzIGY6CgkJCWYud3JpdGUoanNvbi5kdW1wcyhzZWxmLmRhdGEpKQoJCXByaW50KGYie0N5fUhhc2lsIGRhdGEgZGlzaW1wYW4ga2Uge1dofXtvcy5nZXRjd2QoKX0iKQoKCWRlZiBjcmVhdGVfZGlyKHNlbGYpOgoJCSIiIgoJCUNyZWF0ZSBhIGRpcmVjdG9yeSB0byBwdXQgYWxsIG9mIHRoZSBPU0lOVCBmaWxlcyBpbnRvLAoJCWl0IGFsc28gYXZvaWQgYSBwb3NzaWJsZSBlcnJvciB3aXRoIGEgZGlyZWN0b3J5IGFscmVhZHkgZXhpc3RpbmcKCQk6cGFyYW1zOiBub25lCgkJOnJldHVybjogbm9uZQoJCSIiIgoJCWkgPSAwCgkJd2hpbGUgVHJ1ZToKCQkJdHJ5OgoJCQkJb3MubWtkaXIoc2VsZi51c2VybmFtZSArIHN0cihpKSkKCQkJCW9zLmNoZGlyKHNlbGYudXNlcm5hbWUgKyBzdHIoaSkpCgkJCQlicmVhawoJCQlleGNlcHQgRmlsZUV4aXN0c0Vycm9yOgoJCQkJaSArPSAxCgoJZGVmIHByaW50X2RhdGEoc2VsZik6CgkJIiIiCgkJUHJpbnRzIG91dCB0aGUgZGF0YSB0byB0aGUgY21kIGxpbmUKCQk6cGFyYW1zOm5vbmUKCQk6cmV0dXJuOiBub25lCgkJIiIiCgkJcHJpbnQoZiJ7Qmx1fSBJTkZPUk1BU0kgQUtVTjpcbiIpCgoJCWZvciBrZXksIHZhbHVlIGluIHNlbGYuZGF0YS5pdGVtcygpOgoKCQkJaWYgKGtleSA9PSAiTmlja25hbWUgbGFzdCBtb2RpZmllZCIpOgoJCQkJbmlja25hbWVsYXN0bW9kaWZ5ID0gZGF0ZXRpbWUuZnJvbXRpbWVzdGFtcCh2YWx1ZSkKCQkJCXByaW50KGYie0N5fXtrZXl9IDoge1dofSIgKyBzdHIobmlja25hbWVsYXN0bW9kaWZ5KSkKCQkJZWxpZiAoa2V5ID09ICJDcmVhdGUgdGltZSIpOgoJCQkJY3JlYXRldGltZSA9IGRhdGV0aW1lLmZyb210aW1lc3RhbXAodmFsdWUpCgkJCQlwcmludChmIntDeX17a2V5fSA6IHtXaH0iICsgc3RyKGNyZWF0ZXRpbWUpKQoJCQllbHNlOgoJCQkJcHJpbnQoZiJ7Q3l9e2tleX0gOiB7V2h9e3ZhbHVlfSIpCgkJCSIiInByaW50KGYie2tleS51cHBlcigpfToge3ZhbHVlfSIpIiIiCgkJCgkJcHJpbnQoZiIgIikK').decode())